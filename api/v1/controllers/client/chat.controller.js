const axios = require("axios");
const Chat = require("../../models/chat.model");
const Tour = require("../../models/tour.model");

// [POST]/api/v1/chats
module.exports.getChatResponse = async (req, res) => {
    try {
        const { message } = req.body;
        const userId = req.user._id;

        if (!message) {
            return res.status(400).json({ error: "Message is required" });
        }

        let chat = await Chat.findOne({ userId });
        if (!chat) {
            chat = new Chat({ userId, history: [] });
        }

        chat.history.push({ role: "user", content: message });

        const invalidTopics = ["b√≥ng ƒë√°", "c√¥ng ngh·ªá", "n·∫•u ƒÉn", "to√°n h·ªçc", "xe c·ªô"];
        if (invalidTopics.some(topic => message.toLowerCase().includes(topic))) {
            return res.json({ reply: "M√¨nh ch·ªâ h·ªó tr·ª£ v·ªÅ du l·ªãch th√¥i nh√©! üöÄ" });
        }

        const currentDate = new Date();
        const month = currentDate.getMonth() + 1;
        const year = currentDate.getFullYear();

        let suggestedTours = "";
        const tours = await Tour.find();

        if (tours.length > 0) {
            suggestedTours = "D∆∞·ªõi ƒë√¢y l√† m·ªôt s·ªë tour b·∫°n c√≥ th·ªÉ tham kh·∫£o:\n" +
                tours.map(tour => `- ${tour.title} (${tour.price} VND)`).join("\n");
        }

        const messages = [
            {
                role: "system",
                content: `B·∫°n l√† m·ªôt tr·ª£ l√Ω du l·ªãch. H√¥m nay l√† th√°ng ${month}/${year}. 
                H√£y cung c·∫•p th√¥ng tin h·ªØu √≠ch v·ªÅ c√°c ƒëi·ªÉm du l·ªãch, 
                l·ªãch tr√¨nh v√† m·∫πo du l·ªãch ch·ªâ nh·ªØng th√¥ng tin t√¥i c·∫•p v√† kh√¥ng ƒë∆∞·ª£c ƒëem nh·ªØng th√¥ng tin b√™n ngo√†i nh√©.\n${suggestedTours}
                Kh√¥ng ƒë·ªÅ c·∫≠p ƒë·∫øn b·∫•t k·ª≥ th∆∞∆°ng hi·ªáu hay website n√†o.`
            },
            ...chat.history,
        ];

        const response = await axios.post(
            "https://openrouter.ai/api/v1/chat/completions",
            {
                model: "deepseek/deepseek-r1:free",
                messages,
            },
            {
                headers: {
                    "Authorization": `Bearer ${process.env.OPENROUTER_API_KEY}`,
                    "HTTP-Referer": "http://localhost:3000",
                    "X-Title": "GoTravel",
                    "Content-Type": "application/json",
                },
            }
        );

        const reply = response.data.choices?.[0]?.message?.content || "No response received.";
        chat.history.push({ role: "assistant", content: reply });
        await chat.save();

        res.json({ reply });
    } catch (error) {
        console.error("Error calling OpenRouter API:", error);
        res.status(500).json({ error: "C√≥ l·ªói x·∫£y ra!" });
    }
};

// [PATCH]/api/v1/chats/clear
module.exports.clearChat = async (req, res) => {
    try {
        const userId = req.user._id;
        await Chat.updateOne({
            userId: userId
        }, {
            $set: {
                history: []
            }
        });
        res.json({
            code: 200,
            message: "X√≥a l·ªãch s·ª≠ tr√≤ chuy·ªán th√†nh c√¥ng!"
        });
    } catch (error) {
        res.json({
            code: 500,
            message: error
        });
    }
}